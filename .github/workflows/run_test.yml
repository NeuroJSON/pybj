name: Test BJData

on: [push]

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version: [ "3.7", "3.8", "3.9", "3.10", "3.11", "3.12", "3.13" ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        if: startsWith(matrix.python-version, '3.')
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Setup Python2 (Linux)
        if: matrix.python-version == '2.7' && startsWith(matrix.os, 'ubuntu')
        run: |
          sudo ln -fs python2 /usr/bin/python
          sudo apt-get update
          sudo apt-get install python-setuptools python-dev
          curl https://bootstrap.pypa.io/pip/2.7/get-pip.py --output get-pip.py
          sudo python2 get-pip.py
          ls -l /usr/bin/pip* /usr/local/bin/pip*
          which pip
      - name: Install packages
        run: |
          sudo apt-get install cython3 lcov
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install coverage numpy setuptools
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Build, run test and coverage
        run: |
          ./coverage_test.sh

  deploy:
    runs-on: ubuntu-22.04
    needs: build
    permissions:
      id-token: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - name: Install build
        run: python3 -m pip install --upgrade build
      - name: Build wheel
        run: |
          python3 -m build
          rm -rf dist/bjdata-*.whl
      - name: Check If the Build Version Exists on PyPI
        id: perform_pypi_upload_check
        shell: bash
        run: |
          $GITHUB_WORKSPACE/.github/check-pypi-upload.sh
      - name: Upload packages to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        if: ${{ github.actor == 'fangq' && steps.perform_pypi_upload_check.outputs.perform_pypi_upload == 1  && github.event_name != 'pull_request'}}
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          verify_metadata: false
          verbose: true
          skip_existing: true
